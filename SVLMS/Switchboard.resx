<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        56zuxfs8979OJzrgHLntHAAAAABJRU5ErkJggg==
</value>
  </data>
</root>